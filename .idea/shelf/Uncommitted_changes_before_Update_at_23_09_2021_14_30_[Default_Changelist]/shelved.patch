Index: src/prototypeGame/model/KaraokeModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/prototypeGame/model/KaraokeModel.java b/src/prototypeGame/model/KaraokeModel.java
new file mode 100644
--- /dev/null	(date 1632334326085)
+++ b/src/prototypeGame/model/KaraokeModel.java	(date 1632334326085)
@@ -0,0 +1,99 @@
+package prototypeGame.model;
+
+import javafx.scene.layout.FlowPane;
+import javafx.scene.paint.Color;
+import javafx.scene.paint.Paint;
+import javafx.scene.text.Font;
+import javafx.scene.text.Text;
+
+import java.util.ArrayList;
+
+public class KaraokeModel {
+
+
+    /**
+     * From https://stackoverflow.com/questions/15081892/javafx-text-multi-word-colorization
+     */
+    class ConsoleInputParse {
+
+        private String[] wordList = {};
+
+        public ConsoleInputParse() {}
+
+        public FlowPane parseInputToArray(String input) {
+            wordList = input.trim().split("[ ]+");
+
+
+            return colorize();
+        }
+
+        /**
+         * Parse the string into words
+         * @param input
+         */
+        public void parseInputToArrayToWords(String input) {
+            wordList = input.trim().split("(?<= )|(?<=\\.)");
+        }
+
+        /**
+         * Parse the string into words
+         * @param word
+         */
+        public char[] parseWordToCharacterArray(String word) {
+            char[] charList = new char[word.length()];
+
+            for(int i = 0; i<word.length(); i++) {
+                charList[i] = word.charAt(i);
+                // access each character
+                //char a = name
+                //System.out.print(a + ", ");
+            }
+            //Text text = new Text();
+            //text.setText(String.valueOf(charList[0]));
+            return charList;
+        }
+
+        public FlowPane colorize() {
+
+            ArrayList<Text> textChunks = new ArrayList<>();
+            FlowPane bundle = new FlowPane();
+            /*
+            //Todo: use regex to check for valid words
+            for (String word : wordList) {
+                String spaced = word + " ";
+                switch (word) {
+                    case "Hello": case "hello":
+                        textChunks.add(customize(spaced, "purple"));
+                        break;
+                    case "World": case "world":
+                        textChunks.add(customize(spaced, "blue"));
+                        break;
+                    case "Stack Overflow":
+                        textChunks.add(customize(spaced, "orange", "Arial Bold", 15));
+                    default:
+                        textChunks.add(customize(spaced, "black", "Arial",  13));
+                        break;
+                }
+            }
+
+             */
+
+            bundle.getChildren().addAll(textChunks);
+            return bundle;
+        }
+
+        public Text customize(String word, Color color) {
+            Text text = new Text("word");
+            text.setFill(color);
+            return text;
+        }
+
+        public Text customize(String word, Color color, Font font) {
+            Text txt = customize(word, color);
+            txt.setFont(font);
+            return txt;
+        }
+
+
+    }
+}
